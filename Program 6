<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
tools:context=".MainActivity">
<TextView
android:layout_width="380dp"
android:layout_height="72dp"
android:layout_alignParentEnd="true"
android:layout_alignParentBottom="true"
android:layout_marginEnd="16dp"
android:layout_marginBottom="621dp"
android:text="Parser Application"
android:textAlignment="center"
android:textSize="30sp"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintHorizontal_bias="0.128"
app:layout_constraintLeft_toLeftOf="parent"
app:layout_constraintRight_toRightOf="parent"
app:layout_constraintTop_toTopOf="parent"
app:layout_constraintVertical_bias="0.07" />
<Button
android:id="@+id/button"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_alignParentEnd="true"
android:layout_alignParentBottom="true"
android:layout_marginEnd="281dp"
android:layout_marginBottom="464dp"
android:onClick="parseXml"
android:text="XML" />
<Button
android:id="@+id/button2"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_alignParentEnd="true"
android:layout_alignParentBottom="true"
android:layout_marginEnd="69dp"
android:layout_marginBottom="465dp"
android:onClick="parseJson"
android:text="JSON" />
<TextView
android:id="@+id/display"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_alignParentEnd="true"
android:layout_alignParentBottom="true"
android:layout_marginEnd="37dp"
android:layout_marginBottom="264dp" android:text=""
android:textSize="18sp" />
</RelativeLayout>





package com.example.myapplication;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;
import org.json.JSONArray;
import org.json.JSONObject;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
public class MainActivity extends AppCompatActivity
{ TextView display;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
display=findViewById(R.id.display);
}
public void parseXml(View V)
{
try {
InputStream is=getAssets().open("city.xml");
DocumentBuilderFactory documentBuilderFactory=DocumentBuilderFactory.newInstance();
DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
Document document=documentBuilder.parse(is);
StringBuilder stringBuilder=new StringBuilder();
stringBuilder.append("XML DATA");
stringBuilder.append("\n-------");
NodeList nodeList=document.getElementsByTagName("place"); for (int
i=0;i<nodeList.getLength();i++)
{
Node node=nodeList.item(i);
if(node.getNodeType()==Node.ELEMENT_NODE) {
Element element=(Element)node;
stringBuilder.append("\n Name").append(getValue("name",element));
stringBuilder.append("\n Latitude").append(getValue("latitude",element));
stringBuilder.append("\n Longitude").append(getValue("longitude",element));
stringBuilder.append("\n Temperature").append(getValue("temperature",element));
stringBuilder.append("\n Humidity").append(getValue("humidity",element));
stringBuilder.append("\n------");
}
}
display.setText(stringBuilder.toString()); }
catch (Exception e)
{
e.printStackTrace();
Toast.makeText(MainActivity.this,"Error in reading xml
file",Toast.LENGTH_SHORT).show();
}
}
public void parseJson(View V)
{ String json;
StringBuilder stringBuilder=new StringBuilder(); try
{
InputStream is=getAssets().open("city.json"); int size=is.available();
byte[] buffer=new byte[size];
is.read(buffer);
json=new String(buffer, StandardCharsets.UTF_8);
JSONArray jsonArray=new JSONArray(json); stringBuilder.append("JSON
DATA");
stringBuilder.append("\n-----");
for (int i=0;i<jsonArray.length();i++)
{
JSONObject jsonObject=jsonArray.getJSONObject(i); stringBuilder.append("\n
Name").append(jsonObject.getString("name"));
stringBuilder.append("\n
Latitude").append(jsonObject.getString("latitude"));
stringBuilder.append("\n
Longitude").append(jsonObject.getString("longitude"));
stringBuilder.append("\n
Temperature").append(jsonObject.getString("temperature"));
stringBuilder.append("\n
Humidity").append(jsonObject.getString("humidity"));
stringBuilder.append("\n-----");
}
display.setText(stringBuilder.toString());
is.close();
}
catch (Exception e)
{
e.printStackTrace();
Toast.makeText(MainActivity.this,"Error in reading json
file",Toast.LENGTH_SHORT).show();
}
}
private String getValue(String tag,Element element) {
return
element.getElementsByTagName(tag).item(0).getChildNodes().item(0). getNodeValue();
}
}
